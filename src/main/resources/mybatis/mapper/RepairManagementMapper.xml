<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiongantaoli.background.mapper.RepairManagementMapper" >
  <resultMap id="BaseResultMap" type="com.xiongantaoli.background.entity.RepairManagement" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="purchase_id" property="purchaseId" jdbcType="BIGINT" />
    <result column="materiel_id" property="materielId" jdbcType="INTEGER" />
    <result column="select_style" property="selectStyle" jdbcType="INTEGER" />
    <result column="materiel_num" property="materielNum" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="BaseResultMap2" type="com.xiongantaoli.background.form.RepairShow" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="purchase_id" property="purchaseId" jdbcType="BIGINT" />
    <result column="materiel_id" property="materielId" jdbcType="INTEGER" />
    <result column="select_style" property="selectStyle" jdbcType="INTEGER" />
    <result column="materiel_num" property="materielNum" jdbcType="INTEGER" />
    <result column="materiel_name" property="materielName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, purchase_id, materiel_id, select_style, materiel_num
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from repair_management
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id = "selectIsExist" resultMap = "BaseResultMap"  >
    select 
    <include refid="Base_Column_List" />
    from repair_management 
    where materiel_id = #{materielId} and purchase_id = #{purchaseId} limit 1
  </select>
  <select id = "selectPart" resultMap = "BaseResultMap2">
  	SELECT
	repair_management.id,
	repair_management.purchase_id,
	repair_management.materiel_id,
	repair_management.materiel_num,
	materiel.materiel_name
	FROM
	repair_management
	INNER JOIN materiel ON repair_management.materiel_id = materiel.`code`
	WHERE
	purchase_id = #{0}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from repair_management
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xiongantaoli.background.entity.RepairManagement" >
    insert into repair_management (id, user_id, purchase_id, 
      materiel_id, select_style, materiel_num
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{purchaseId,jdbcType=BIGINT}, 
      #{materielId,jdbcType=INTEGER}, #{selectStyle,jdbcType=INTEGER}, #{materielNum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xiongantaoli.background.entity.RepairManagement" >
    insert into repair_management
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="purchaseId != null" >
        purchase_id,
      </if>
      <if test="materielId != null" >
        materiel_id,
      </if>
      <if test="selectStyle != null" >
        select_style,
      </if>
      <if test="materielNum != null" >
        materiel_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="purchaseId != null" >
        #{purchaseId,jdbcType=BIGINT},
      </if>
      <if test="materielId != null" >
        #{materielId,jdbcType=INTEGER},
      </if>
      <if test="selectStyle != null" >
        #{selectStyle,jdbcType=INTEGER},
      </if>
      <if test="materielNum != null" >
        #{materielNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiongantaoli.background.entity.RepairManagement" >
    update repair_management
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="purchaseId != null" >
        purchase_id = #{purchaseId,jdbcType=BIGINT},
      </if>
      <if test="materielId != null" >
        materiel_id = #{materielId,jdbcType=INTEGER},
      </if>
      <if test="selectStyle != null" >
        select_style = #{selectStyle,jdbcType=INTEGER},
      </if>
      <if test="materielNum != null" >
        materiel_num = #{materielNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiongantaoli.background.entity.RepairManagement" >
    update repair_management
    set user_id = #{userId,jdbcType=BIGINT},
      purchase_id = #{purchaseId,jdbcType=BIGINT},
      materiel_id = #{materielId,jdbcType=INTEGER},
      select_style = #{selectStyle,jdbcType=INTEGER},
      materiel_num = #{materielNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
 <resultMap id="PriceToMaterielMap" type="com.xiongantaoli.background.entity.PriceToMateriel" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="num" property="num" jdbcType="BIGINT" />
  </resultMap>
  <select id="selectByPurchaseId" parameterType="java.lang.Long" resultMap="PriceToMaterielMap">
    SELECT
	materiel.materiel_price as price,
	repair_management.materiel_num as num
	FROM
	repair_management
	INNER JOIN materiel ON repair_management.materiel_id = materiel.code
    where purchase_id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectSinglePrice" resultType="java.math.BigDecimal">
  select materiel_price 
  from 
  materiel
  where code = #{materialid}
  </select>
  <delete id="deleteByPurchaseId">
  delete from repair_management
  where purchase_id = #{key}
  </delete>
</mapper>